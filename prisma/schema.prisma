// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id             String           @id
  sessions       Session[]
  firstName      String
  lastName       String
  userName       String           @unique
  initials       String
  email          String           @unique
  hashedPassword String
  posts          Post[]
  bookmarks      BookmarkedPost[]
  comments       Comment[]
  followedBy     Follows[]        @relation("followedBy")
  following      Follows[]        @relation("following")
  createdAt      DateTime         @default(now())
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model Follows {
  followedBy   User     @relation("followedBy", fields: [followedById], references: [id])
  followedById String
  following    User     @relation("following", fields: [followingId], references: [id])
  followingId  String
  createdAt    DateTime @default(now())

  @@id([followingId, followedById])
}

model Post {
  id              String           @id @default(cuid())
  content         String?
  tags            String?
  user            User?            @relation(fields: [userId], references: [id])
  userId          String?
  likesCount      Int
  comments        Comment[]
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  bookmarkedPosts BookmarkedPost[]
}

model Comment {
  id      Int     @id @default(autoincrement())
  title   String
  content String?
  post    Post?   @relation(fields: [postId], references: [id])
  postId  String?
  user    User?   @relation(fields: [userId], references: [id])
  userId  String?
}

model BookmarkedPost {
  post         Post     @relation(fields: [postId], references: [id])
  postId       String
  user         User?    @relation(fields: [userId], references: [id])
  userId       String
  bookmarkedAt DateTime @default(now())

  @@id([postId, userId])
}
